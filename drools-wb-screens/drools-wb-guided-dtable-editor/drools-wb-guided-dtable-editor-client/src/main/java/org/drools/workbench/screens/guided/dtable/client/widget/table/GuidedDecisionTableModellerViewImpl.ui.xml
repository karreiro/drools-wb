<!--
  ~ Copyright 2015 Red Hat, Inc. and/or its affiliates.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder"
             xmlns:g="urn:import:com.google.gwt.user.client.ui"
             xmlns:b="urn:import:org.gwtbootstrap3.client.ui"
             xmlns:uf="urn:import:org.uberfire.ext.wires.core.grids.client.widget.layer.impl">

  <ui:with field="i18n" type="org.drools.workbench.screens.guided.dtable.client.resources.i18n.GuidedDecisionTableConstants"/>

  <ui:style field="css">

    .container {
      display: flex;
      flex-direction: column;
      position: relative;
      background-color: #F1F1F1;
      width: 100%;
      height: 100%;
    }

    .canvas {
      overflow: hidden;
      margin: 0;
      border: 1px solid #F0F0F0;
      outline: none;
      flex-grow: 1;
    }

    .nofocus {
      border-style: none;
      outline: none;
    }

    .pinnedModeIndicator {
      position: absolute;
      left: 18em;
      top: -2em;
      transition: top 0.5s linear;
      height: 1.5em;
    }

    .font-loader {
      /*
      This is a hack to pre-load the "Glyphicons Halflings" font-family before they are rendered to the canvas
      See http://stackoverflow.com/questions/2756575/drawing-text-to-canvas-with-font-face-does-not-work-at-the-first-time
      */
      position: absolute;
      top: -1000px;
      left: -1000px;
      font-family: "Glyphicons Halflings", serif;
    }
  </ui:style>

  <g:HTMLPanel styleName="{css.container}">

    <g:HTMLPanel ui:field="pinnedModeIndicator" styleName="{css.pinnedModeIndicator}">
      <b:Icon type="THUMB_TACK" title="{i18n.TablePinnedModeHelp}" />
      Pinned mode
    </g:HTMLPanel>

    <g:HTMLPanel styleName="{css.font-loader}">
      <div class="glyphicon-triangle-top"></div>
      <div class="glyphicon-triangle-bottom"></div>
      <div class="glyphicon-link"></div>
      <div class="glyphicon-thumb-tack"></div>
    </g:HTMLPanel>

    <g:HTMLPanel styleName="{css.canvas}">
      <uf:GridLienzoPanel ui:field="gridPanel" styleName="{css.nofocus}"/>
    </g:HTMLPanel>
    <!-- This is required (for some inexplicable reason) to be able to programmatically call gridPanel.setFocus(true) -->
    <!-- when tabbing out of a BaseDOMElement. This is the case when a BaseDOMElement receives a blur Event and we want -->
    <!-- to setFocus on gridPanel to provide a "seamless" in-grid editing experience to Users using keyboard navigation -->
    <g:FocusPanel/>
  </g:HTMLPanel>
</ui:UiBinder>
